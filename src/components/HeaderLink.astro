---
import { cn } from '@utils'
import type { HTMLAttributes } from 'astro/types'

interface Props extends HTMLAttributes<'a'> {
    /**
     * Whether to match active state exactly. If false, will match if current path starts with href.
     * @default false
     */
    exactMatch?: boolean
}

const { href, class: className, exactMatch = false, ...props } = Astro.props

const { pathname } = Astro.url
const isActive = exactMatch ? href === pathname || href === pathname.replace(/\/$/, '') : pathname.startsWith(href?.toString() || '')
---

<a
    {href}
    class={cn(
        // Base styles
        'inline-flex items-center transition-colors duration-200',
        'hover:text-opacity-100 focus-visible:text-opacity-100',
        'focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 rounded-sm',
        isActive ? 'text-opacity-100 font-medium' : 'text-opacity-60',
        className
    )}
    aria-current={isActive ? 'page' : undefined}
    rel={props.target === '_blank' ? 'noopener noreferrer' : undefined}
    {...props}
>
    <slot />
</a>
